// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login determineDisplay should match the snapshot when displayCreate is login 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Login
    user={Object {}}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "action": "submit",
      "children": Array [
        <img
          alt="dice-logo"
          id="dice-img"
          src="dice.gif"
/>,
        <h1>
          Game Board
</h1>,
        <div>
          <Unknown
                    email=""
                    handleChange={[Function]}
                    passwordOne=""
          />
          <p
                    id="toggle-account"
                    onClick={[Function]}
          >
                    Don't have an account? Create one!
                    <i
                              className="fas fa-mouse-pointer"
                              id="pointer"
                    />
          </p>
</div>,
        <button
          className="LogIn"
          disabled={true}
          id="submit-btn"
          type="submit"
>
          Submit
</button>,
        null,
      ],
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "alt": "dice-logo",
          "id": "dice-img",
          "src": "dice.gif",
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Game Board",
        },
        "ref": null,
        "rendered": "Game Board",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Unknown
              email=""
              handleChange={[Function]}
              passwordOne=""
/>,
            <p
              id="toggle-account"
              onClick={[Function]}
>
              Don't have an account? Create one!
              <i
                            className="fas fa-mouse-pointer"
                            id="pointer"
              />
</p>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "email": "",
              "handleChange": [Function],
              "passwordOne": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Don't have an account? Create one!",
                <i
                  className="fas fa-mouse-pointer"
                  id="pointer"
/>,
              ],
              "id": "toggle-account",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Array [
              "Don't have an account? Create one!",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "fas fa-mouse-pointer",
                  "id": "pointer",
                },
                "ref": null,
                "rendered": null,
                "type": "i",
              },
            ],
            "type": "p",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Submit",
          "className": "LogIn",
          "disabled": true,
          "id": "submit-btn",
          "type": "submit",
        },
        "ref": null,
        "rendered": "Submit",
        "type": "button",
      },
      null,
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "action": "submit",
        "children": Array [
          <img
            alt="dice-logo"
            id="dice-img"
            src="dice.gif"
/>,
          <h1>
            Game Board
</h1>,
          <div>
            <Unknown
                        email=""
                        handleChange={[Function]}
                        passwordOne=""
            />
            <p
                        id="toggle-account"
                        onClick={[Function]}
            >
                        Don't have an account? Create one!
                        <i
                                    className="fas fa-mouse-pointer"
                                    id="pointer"
                        />
            </p>
</div>,
          <button
            className="LogIn"
            disabled={true}
            id="submit-btn"
            type="submit"
>
            Submit
</button>,
          null,
        ],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "dice-logo",
            "id": "dice-img",
            "src": "dice.gif",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Game Board",
          },
          "ref": null,
          "rendered": "Game Board",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Unknown
                email=""
                handleChange={[Function]}
                passwordOne=""
/>,
              <p
                id="toggle-account"
                onClick={[Function]}
>
                Don't have an account? Create one!
                <i
                                className="fas fa-mouse-pointer"
                                id="pointer"
                />
</p>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "email": "",
                "handleChange": [Function],
                "passwordOne": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Don't have an account? Create one!",
                  <i
                    className="fas fa-mouse-pointer"
                    id="pointer"
/>,
                ],
                "id": "toggle-account",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Array [
                "Don't have an account? Create one!",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "fas fa-mouse-pointer",
                    "id": "pointer",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "i",
                },
              ],
              "type": "p",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Submit",
            "className": "LogIn",
            "disabled": true,
            "id": "submit-btn",
            "type": "submit",
          },
          "ref": null,
          "rendered": "Submit",
          "type": "button",
        },
        null,
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Login determineDisplay should match the snapshot when displayCreate is signup 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Login
    user={Object {}}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "action": "submit",
      "children": Array [
        <img
          alt="dice-logo"
          id="dice-img"
          src="dice.gif"
/>,
        <h1>
          Game Board
</h1>,
        <div>
          <Unknown
                    email=""
                    firstName=""
                    handleChange={[Function]}
                    lastName=""
                    passwordOne=""
                    passwordTwo=""
          />
          <p
                    id="toggle-account"
                    onClick={[Function]}
          >
                    Already have an account? Log in!
                    <i
                              className="fas fa-mouse-pointer"
                              id="pointer"
                    />
          </p>
</div>,
        <button
          className="LogIn"
          disabled={true}
          id="submit-btn"
          type="submit"
>
          Submit
</button>,
        null,
      ],
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "alt": "dice-logo",
          "id": "dice-img",
          "src": "dice.gif",
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Game Board",
        },
        "ref": null,
        "rendered": "Game Board",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Unknown
              email=""
              firstName=""
              handleChange={[Function]}
              lastName=""
              passwordOne=""
              passwordTwo=""
/>,
            <p
              id="toggle-account"
              onClick={[Function]}
>
              Already have an account? Log in!
              <i
                            className="fas fa-mouse-pointer"
                            id="pointer"
              />
</p>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "email": "",
              "firstName": "",
              "handleChange": [Function],
              "lastName": "",
              "passwordOne": "",
              "passwordTwo": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Already have an account? Log in!",
                <i
                  className="fas fa-mouse-pointer"
                  id="pointer"
/>,
              ],
              "id": "toggle-account",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Array [
              "Already have an account? Log in!",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "fas fa-mouse-pointer",
                  "id": "pointer",
                },
                "ref": null,
                "rendered": null,
                "type": "i",
              },
            ],
            "type": "p",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Submit",
          "className": "LogIn",
          "disabled": true,
          "id": "submit-btn",
          "type": "submit",
        },
        "ref": null,
        "rendered": "Submit",
        "type": "button",
      },
      null,
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "action": "submit",
        "children": Array [
          <img
            alt="dice-logo"
            id="dice-img"
            src="dice.gif"
/>,
          <h1>
            Game Board
</h1>,
          <div>
            <Unknown
                        email=""
                        firstName=""
                        handleChange={[Function]}
                        lastName=""
                        passwordOne=""
                        passwordTwo=""
            />
            <p
                        id="toggle-account"
                        onClick={[Function]}
            >
                        Already have an account? Log in!
                        <i
                                    className="fas fa-mouse-pointer"
                                    id="pointer"
                        />
            </p>
</div>,
          <button
            className="LogIn"
            disabled={true}
            id="submit-btn"
            type="submit"
>
            Submit
</button>,
          null,
        ],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "dice-logo",
            "id": "dice-img",
            "src": "dice.gif",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Game Board",
          },
          "ref": null,
          "rendered": "Game Board",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Unknown
                email=""
                firstName=""
                handleChange={[Function]}
                lastName=""
                passwordOne=""
                passwordTwo=""
/>,
              <p
                id="toggle-account"
                onClick={[Function]}
>
                Already have an account? Log in!
                <i
                                className="fas fa-mouse-pointer"
                                id="pointer"
                />
</p>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "email": "",
                "firstName": "",
                "handleChange": [Function],
                "lastName": "",
                "passwordOne": "",
                "passwordTwo": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Already have an account? Log in!",
                  <i
                    className="fas fa-mouse-pointer"
                    id="pointer"
/>,
                ],
                "id": "toggle-account",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Array [
                "Already have an account? Log in!",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "fas fa-mouse-pointer",
                    "id": "pointer",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "i",
                },
              ],
              "type": "p",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Submit",
            "className": "LogIn",
            "disabled": true,
            "id": "submit-btn",
            "type": "submit",
          },
          "ref": null,
          "rendered": "Submit",
          "type": "button",
        },
        null,
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
